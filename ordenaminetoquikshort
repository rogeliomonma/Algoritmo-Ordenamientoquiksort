package ordenamineto.quikshort;
/**
 *
 * @author rogel
 */
import java.util.Random;
import java.util.Scanner;
//**************SCOPE 1*****************//
public class OrdenaminetoQuikshort {
//**************SCOPE 2*****************//
    public static void main (String [] args){
    Scanner teclado= new Scanner(System.in);
   
        System.out.print("Ingrese la dimension del arreglo: ");
        int tam=teclado.nextInt();
        int arreglo[]= new int[tam];
        Random rnd =new Random();
//**************SCOPE 3*****************//
        //Ingresando valores al arreglo aleatorios
        for(int i=0; i<arreglo.length; i++){
            System.out.print("A["+i+"]= ");
            arreglo[i]=rnd.nextInt(500-0+1)+0;
            System.out.print(arreglo[i]+"\n");
        }
//Aplicación del método de ordenamiento
        quicksort(arreglo,0,tam-1);
//**************SCOPE 4*****************//
        //Imprimiendo el arreglo ordenado
        System.out.println("===== Arreglo Ordenado Metodo de Ordenamineto Quick Sort ====");
        for(int i =0; i<arreglo.length;i++){
            System.out.print("\t"+arreglo[i]);
     }
 
    }
 //**************SCOPE 5*****************//
 //Método de ordenamineto Quick Sort
 static void quicksort(int arreglo[],int primero,int ultimo){
 int central,i,j;
 int pivote;
 central=(primero+ultimo)/2;
 pivote=arreglo[central];
 i=primero;
 j=ultimo;
 //**************SCOPE 6*****************//
 do{
 //**************SCOPE 7*****************//
   while(arreglo[i]<pivote){ i++;}
   //**************SCOPE 8*****************//
   while(arreglo[j]>pivote){ j--;}
 //**************SCOPE 9*****************//
   if(i<=j){
    int temp;
    temp=arreglo[i];
    arreglo[i]=arreglo[j]; /*intercambia A[i] con A[j] */
    arreglo[j]=temp;
    i++;
    j--;
   }
  }
  //**************SCOPE 11*****************//
 while(i<=j);{
  //**************SCOPE 12*****************//
 if(primero<j){
  quicksort(arreglo,primero,j); /*mismo proceso con sublista izquierda*/
 }
  //**************SCOPE 13*****************//
 if(i<ultimo){
  quicksort(arreglo,i,ultimo); /*mismo proceso con sublista derecha*/
 }
 }
}
  
}
